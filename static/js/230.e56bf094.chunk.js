"use strict";(self.webpackChunkreact_homework_template=self.webpackChunkreact_homework_template||[]).push([[230],{5230:function(n,e,t){t.r(e),t.d(e,{default:function(){return M}});var r,a,i,o,s,c,d,l,u=t(9434),m=t(5705),p=t(7103),x=t(5984),h=t(168),f=t(6444),b=(0,f.ZP)(m.l0)(r||(r=(0,h.Z)(["\n  display: flex;\n  flex-direction: column;\n  border: 2px solid;\n  padding: 20px;\n  width: 30%;\n  gap: 30px;\n  margin-top: 20px;\n  margin-bottom: 20px;\n"]))),j=(0,f.ZP)(m.gN)(a||(a=(0,h.Z)(["\n  margin-top: 10px;\n  width: 90%;\n  background-color: antiquewhite;\n"]))),Z=(0,f.ZP)(m.Bc)(i||(i=(0,h.Z)([""]))),g=f.ZP.button(o||(o=(0,h.Z)(["\n  width: 150px;\n  background-color: #6262d8;\n  cursor: pointer;\n"]))),v=t(8893),w=t(184),y=p.Ry().shape({name:p.Z_().required(),number:p.Z_().min(6).max(16).required()}),k={name:"",number:""},C=function(){var n=(0,u.I0)();return(0,w.jsx)(m.J9,{initialValues:k,validationSchema:y,onSubmit:function(e,t){var r=t.resetForm;e.id=(0,x.x0)(),n((0,v.uK)(e)),r()},children:(0,w.jsxs)(b,{autoComplete:"off",children:[(0,w.jsxs)("label",{htmlFor:"name",children:["Name",(0,w.jsx)(j,{type:"text",name:"name",pattern:"^[a-zA-Z\u0430-\u044f\u0410-\u042f]+(([' -][a-zA-Z\u0430-\u044f\u0410-\u042f ])?[a-zA-Z\u0430-\u044f\u0410-\u042f]*)*$",title:"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan"}),(0,w.jsx)(Z,{name:"name"})]}),(0,w.jsxs)("label",{htmlFor:"number",children:["Telephone",(0,w.jsx)(j,{type:"tel",name:"number",pattern:"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}",title:"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +"}),(0,w.jsx)(Z,{name:"number"})]}),(0,w.jsx)(g,{type:"submit",children:"Add contact"})]})})},A=f.ZP.ul(s||(s=(0,h.Z)(["\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  width: fit-content;\n  margin-top: 20px;\n  padding: 20px;\n  border: dotted 1px;\n"]))),P=f.ZP.li(c||(c=(0,h.Z)(["\n  display: flex;\n  gap: 10px;\n"]))),z=f.ZP.button(d||(d=(0,h.Z)(["\n  width: fit-content;\n  background-color: #bb1414;\n  cursor: pointer;\n"]))),F=function(n){var e=n.name,t=n.number,r=n.id,a=(0,u.I0)();return(0,w.jsxs)(P,{children:[(0,w.jsxs)("span",{children:[e,": ",t]}),(0,w.jsx)(z,{onClick:function(){a((0,v.GK)(r))},children:"Delete"})]})},_=t(6916),q=function(n){return n.filter.filter},N=(0,_.P1)([function(n){return n.contacts.contacts.items},q],(function(n,e){if(e){var t=e.toLowerCase();return n.filter((function(n){return n.name.toLowerCase().includes(t)}))}return n})),B=function(){var n=(0,u.v9)(N);return(0,w.jsx)(w.Fragment,{children:n&&(0,w.jsx)(A,{children:n.map((function(n){var e=n.id,t=n.name,r=n.number;return(0,w.jsx)(F,{id:e,name:t,number:r},e)}))})})},I=t(96),J=f.ZP.div(l||(l=(0,h.Z)(["\n  margin-top: 10px;\n  display: flex;\n  width: 20%;\n  flex-direction: column;\n  gap: 10px;\n"]))),K=function(){var n=(0,u.I0)(),e=(0,u.v9)(q);return(0,w.jsxs)(J,{children:[(0,w.jsx)("p",{children:"Find contacts by name"}),(0,w.jsx)("input",{type:"text",value:e,onChange:function(e){return n((0,I.h)(e.target.value))},pattern:"^[a-zA-Z\u0430-\u044f\u0410-\u042f]+(([' -][a-zA-Z\u0430-\u044f\u0410-\u042f ])?[a-zA-Z\u0430-\u044f\u0410-\u042f]*)*$",title:"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan"})]})},L=t(4270),M=function(){return(0,w.jsxs)(w.Fragment,{children:[(0,w.jsx)(L.q,{children:(0,w.jsx)("title",{children:"Your tasks"})}),(0,w.jsx)("h1",{children:"Phonebook"}),(0,w.jsx)(C,{}),(0,w.jsx)("h2",{children:"Contacts"}),(0,w.jsx)(K,{}),(0,w.jsx)(B,{})]})}}}]);
//# sourceMappingURL=230.e56bf094.chunk.js.map